k <- 10
h_list <- list()
for(i in 1:k){
h_list[[i]] <- do.call(cbind, h[(i - 1) * ncol(A) + 1, i * ncol(A)])
}
for(i in 1:k){
h_list[[i]] <- do.call(cbind, h[(i - 1) * ncol(A) + 1, i * ncol(A) + 1])
}
for(i in 1:k)
h_list[[i]] <- h[(i - 1) * ncol(A) + 1, i * ncol(A) + 1]
for(i in 1:k)
h_list[[i]] <- h[((i - 1) * ncol(A) + 1):(i * ncol(A) + 1)]
str(h_list)
length(h_list)
str(h)
w_list <- h_list <- list()
for(i in 1:k){
h_list[[i]] <- do.call(cbind, h[(i - 1) * k + 1, i * k + 1])
}
w_list <- h_list <- list()
for(i in 1:k){
h_list[[i]] <- do.call(cbind, h[((i - 1) * k + 1):(i * k + 1]))
}
i <- 1
h2 <- h[((i - 1) * k + 1):(i * k + 1])]
h2 <- h[((i - 1) * k + 1):(i * k + 1)]
str(h2)
w_list <- h_list <- list()
for(i in 1:k){
h_list[[i]] <- do.call(cbind, h[((i - 1) * k + 1):(i * k)])
}
str(h_list)
dim(h_list[[1]])
mheatmap(h_list[[1]])
w_list <- h_list <- list()
for(i in 1:k){
h_list[[i]] <- do.call(rbind, h[((i - 1) * k + 1):(i * k)])
}
mheatmap(h_list[[1]])
mheatmap(h_list[[5]])
mheatmap(h_list[[5]], Rowv = T, Colv = T)
w_list <- h_list <- list()
for(i in 1:k){
h_list[[i]] <- do.call(rbind, h[((i - 1) * k + 1):(i * k)])
w_list[[i]] <- do.call(cbind, w[((i - 1) * k + 1):(i * k)])
}
Rcpp::sourceCpp('R packages/amf/src/nnls.cpp')
mod <- c_nmf(A, 10, maxit = 5, full_path = T)
str(mod)
str(mod$h)
mheatmap(mod$h[[5]])
mheatmap(mod$h[,,1])
mheatmap(mod$h[,,2])
mheatmap(mod$h[,,3])
mheatmap(mod$h[,,4])
mheatmap(mod$h[,,5])
source('C:/Users/Owner/Desktop/R packages/amf/R/nmf.R')
mod <- nmf(A, 10, maxit = 5)
mod <- nmf(A, 10, maxit = 5, full_path = T)
mod <- c_nmf(A, 10, full_path = T)
str(mod)
mheatmap(mod$h[,,1])
mheatmap(mod$h[,,5])
mheatmap(mod$h[,,10])
mheatmap(mod$h[,,20])
mheatmap(mod$h[,,28])
mheatmap(mod$h[,,29])
source('C:/Users/Owner/Desktop/R packages/amf/R/nmf.R')
source('C:/Users/Owner/Desktop/R packages/amf/R/nmf.R')
mod <- c_nmf(A, 15, full_path = T, tol = 0.005)
mheatmap(mod$h[,,10])
mheatmap(mod$h[,,20])
mheatmap(mod$h[,,50])
mheatmap(mod$h[,,50], Rowv = T, Colv = T)
mheatmap(mod$h[,,100], Rowv = T, Colv = T)
library(cowplot)
plot_grid(mheatmap(mod$h[,,1], title = "iteration 1"), mheatmap(mod$h[,,10], title = "iteration 10"), mheatmap(mod$h[,,50], title = "iteration 50"), mheatmap(mod$h[,,100], title = "iteration 100"), nrow = 2, ncol = 2)
p1 <- mheatmap(mod$h[,,1], title = "Iteration 1", xlab = "15 factors", ylab = "1260 T-cells") + NoLegend()
p1 <- mheatmap(mod$h[,,1], title = "Iteration 1", xlab = "15 factors", ylab = "1260 T-cells")
p1
p1 <- mheatmap(mod$h[,,1], title = "Iteration 1", ylab = "15 factors", xlab = "1260 T-cells") + NoLegend()
library(ggplot2)
p1 <- mheatmap(mod$h[,,1], title = "Iteration 1", ylab = "15 factors", xlab = "1260 T-cells") + NoLegend()
p1 <- mheatmap(mod$h[,,1], title = "Iteration 1", ylab = "15 factors", xlab = "1260 T-cells")
plot_grid(p1 + No_Legend())
plot_grid(p1 + NoLegend())
?NoLegend
p1 <- mheatmap(mod$h[,,1], title = "Iteration 1", ylab = "15 factors", xlab = "1260 T-cells") + theme(legend. title = element_blank())
p1 <- mheatmap(mod$h[,,1], title = "Iteration 1", ylab = "15 factors", xlab = "1260 T-cells")
class(p1)
p1  + theme(legend. title = element_blank())
p1  + theme(legend.title = element_blank())
p1  + NoLegend()
p1  + No_Legend()
?mheatmap
mheatmap(mod$h[,,1], title = "Iteration 1", ylab = "15 factors", xlab = "1260 T-cells", legend.labels = c(0, 0.01), colors = viridis(10))
mheatmap(mod$h[,,1], title = "Iteration 1", ylab = "15 factors", xlab = "1260 T-cells", legend.labels = c(0, 0.01), colors = viridis(10, option = "B"))
mheatmap(mod$h[,,1], title = "Iteration 1", ylab = "15 factors", xlab = "1260 T-cells", legend.labels = c(0, 0.01), colors = viridis(100, option = "B"))
mheatmap(mod$h[,,100], title = "Iteration 1", ylab = "15 factors", xlab = "1260 T-cells", legend.labels = c(0, 0.01), colors = viridis(100, option = "B"))
p1 <- mheatmap(mod$h[,,1], title = "Iteration 1", ylab = "15 factors", xlab = "1260 T-cells", legend.labels = c(0, 0.01), colors = viridis(100, option = "B"))
p2 <- mheatmap(mod$h[,,10], title = "Iteration 10", ylab = "15 factors", xlab = "1260 T-cells", legend.labels = c(0, 0.01), colors = viridis(100, option = "B"))
p2
p3 <- mheatmap(mod$h[,,10], title = "Iteration 50", ylab = "15 factors", xlab = "1260 T-cells", legend.labels = c(0, 0.01), colors = viridis(100, option = "B"))
p3
p4 <- mheatmap(mod$h[,,100], title = "Iteration 100", ylab = "15 factors", xlab = "1260 T-cells", legend.labels = c(0, 0.01), colors = viridis(100, option = "B"))
p4
p3 <- mheatmap(mod$h[,,50], title = "Iteration 50", ylab = "15 factors", xlab = "1260 T-cells", legend.labels = c(0, 0.01), colors = viridis(100, option = "B"))
p3
plot_grid(p1, p2, p3, p4, nrow = 2, ncol = 2)
mheatmap(mod$w[1:2000,,1])
mheatmap(mod$w[1:5000,,1])
mod <- c_nmf(A[1:1000], 10, full_path = T)
mod <- c_nmf(A[1:1000,], 10, full_path = T)
mod <- c_nmf(A[1:1000,], 10, full_path = T, tol = 0.00001)
mod <- c_nmf(A[1:1000,], 10, full_path = T, tol = 0.0000001, maxit = 1000)
p1 <- mheatmap(mod$h[,,1], title = "Iteration 1", ylab = "15 factors", xlab = "1260 T-cells", legend.labels = c(0, 0.01), colors = viridis(100, option = "B"))
p1
plot_grid(mheatmap(mod$w[,,1]), title = "Iteration 1", ylab = "1000 genes", xlab = "10 factors", legend.labels = c(0, 0.01), colors = viridis(100, option = "B"), mheatmap(mod$h[,,1]), ylab = "10 factors", xlab = "1000 cells", legend.labels = c(0, 0.01), colors = viridis(100, option = "B"), nrow = 1, ncol = 2)
mheatmap(mod$w[,,1]), title = "Iteration 1", ylab = "1000 genes", xlab = "10 factors", legend.labels = c(0, 0.01), colors = viridis(100, option = "B")
mheatmap(mod$w[,,1], title = "Iteration 1", ylab = "1000 genes", xlab = "10 factors", legend.labels = c(0, 0.01), colors = viridis(100, option = "B"))
plot_grid(mheatmap(mod$w[,,1], title = "Iteration 1", ylab = "1000 genes", xlab = "10 factors", legend.labels = c(0, 0.01), colors = viridis(100, option = "B"), mheatmap(mod$h[,,1], ylab = "10 factors", xlab = "1000 cells", legend.labels = c(0, 0.01), colors = viridis(100, option = "B"), nrow = 1, ncol = 2)
)
)
plot_grid(mheatmap(mod$w[,,1], title = "Iteration 1", ylab = "1000 genes", xlab = "10 factors", legend.labels = c(0, 0.01), colors = viridis(100, option = "B")), mheatmap(mod$h[,,1], ylab = "10 factors", xlab = "1000 cells", legend.labels = c(0, 0.01), colors = viridis(100, option = "B"), nrow = 1, ncol = 2))
plot_grid(mheatmap(mod$w[,,1], title = "Iteration 1", ylab = "1000 genes", xlab = "10 factors", legend.labels = c(0, 0.01), colors = viridis(100, option = "B")), mheatmap(mod$h[,,1], ylab = "10 factors", xlab = "1000 cells", legend.labels = c(0, 0.01), colors = viridis(100, option = "B")), nrow = 1, ncol = 2)
plot_grid(mheatmap(mod$w[,,1], title = "Iteration 1", ylab = "1000 genes", xlab = "10 factors", legend.labels = c(0, 0.01), colors = viridis(100, option = "B", aspect.ratio = 0.5)), mheatmap(mod$h[,,1], ylab = "10 factors", xlab = "1000 cells", legend.labels = c(0, 0.01), colors = viridis(100, option = "B")), nrow = 1, ncol = 2)
plot_grid(mheatmap(mod$w[,,1], title = "Iteration 1", ylab = "1000 genes", xlab = "10 factors", legend.labels = c(0, 0.01), colors = viridis(100, option = "B"), aspect.ratio = 0.5), mheatmap(mod$h[,,1], ylab = "10 factors", xlab = "1000 cells", legend.labels = c(0, 0.01), colors = viridis(100, option = "B")), nrow = 1, ncol = 2)
plot_grid(mheatmap(mod$w[,,1], title = "Iteration 1", ylab = "1000 genes", xlab = "10 factors", legend.labels = c(0, 0.01), colors = viridis(100, option = "B"), aspect.ratio = 1.5), mheatmap(mod$h[,,1], ylab = "10 factors", xlab = "1000 cells", legend.labels = c(0, 0.01), colors = viridis(100, option = "B")), nrow = 1, ncol = 2)
plot_grid(mheatmap(mod$w[,,1], title = "Iteration 1", ylab = "1000 genes", xlab = "10 factors", legend.labels = c(0, 0.01), colors = viridis(100, option = "B"), aspect.ratio = 1.5), mheatmap(mod$h[,,1], ylab = "10 factors", xlab = "1000 cells", legend.labels = c(0, 0.01), colors = viridis(100, option = "B")), nrow = 1, ncol = 2, rel_widths = c(0.3, 0.7))
plot_grid(mheatmap(mod$w[,,1], title = "Iteration 1", ylab = "1000 genes", xlab = "10 factors", legend.labels = c(0, 0.01), colors = viridis(100, option = "B"), aspect.ratio = 1.5), mheatmap(mod$h[,,1], ylab = "10 factors", xlab = "1000 cells", legend.labels = c(0, 0.01), colors = viridis(100, option = "B")), nrow = 1, ncol = 2, rel_widths = c(0.4, 0.6))
plot_grid(mheatmap(mod$w[,,10], title = "Iteration 10", ylab = "1000 genes", xlab = "10 factors", legend.labels = c(0, 0.01), colors = viridis(100, option = "B"), aspect.ratio = 1.5), mheatmap(mod$h[,,10], ylab = "10 factors", xlab = "1000 cells", legend.labels = c(0, 0.01), colors = viridis(100, option = "B")), nrow = 1, ncol = 2, rel_widths = c(0.4, 0.6))
plot_grid(mheatmap(mod$w[,,25], title = "Iteration 10", ylab = "1000 genes", xlab = "10 factors", legend.labels = c(0, 0.01), colors = viridis(100, option = "B"), aspect.ratio = 1.5), mheatmap(mod$h[,,25], ylab = "10 factors", xlab = "1000 cells", legend.labels = c(0, 0.01), colors = viridis(100, option = "B")), nrow = 1, ncol = 2, rel_widths = c(0.4, 0.6))
plot_grid(mheatmap(mod$w[,,25], title = "Iteration 25", ylab = "1000 genes", xlab = "10 factors", legend.labels = c(0, 0.01), colors = viridis(100, option = "B"), aspect.ratio = 1.5), mheatmap(mod$h[,,25], ylab = "10 factors", xlab = "1000 cells", legend.labels = c(0, 0.01), colors = viridis(100, option = "B")), nrow = 1, ncol = 2, rel_widths = c(0.4, 0.6))
plot_grid(mheatmap(mod$w[,,50], title = "Iteration 50", ylab = "1000 genes", xlab = "10 factors", legend.labels = c(0, 0.01), colors = viridis(100, option = "B"), aspect.ratio = 1.5), mheatmap(mod$h[,,50], ylab = "10 factors", xlab = "1000 cells", legend.labels = c(0, 0.01), colors = viridis(100, option = "B")), nrow = 1, ncol = 2, rel_widths = c(0.4, 0.6))
plot_grid(mheatmap(mod$w[,,100], title = "Iteration 100", ylab = "1000 genes", xlab = "10 factors", legend.labels = c(0, 0.01), colors = viridis(100, option = "B"), aspect.ratio = 1.5), mheatmap(mod$h[,,100], ylab = "10 factors", xlab = "1000 cells", legend.labels = c(0, 0.01), colors = viridis(100, option = "B")), nrow = 1, ncol = 2, rel_widths = c(0.4, 0.6))
plot_grid(mheatmap(mod$w[,,500], title = "Iteration 500", ylab = "1000 genes", xlab = "10 factors", legend.labels = c(0, 0.01), colors = viridis(100, option = "B"), aspect.ratio = 1.5), mheatmap(mod$h[,,500], ylab = "10 factors", xlab = "1000 cells", legend.labels = c(0, 0.01), colors = viridis(100, option = "B")), nrow = 1, ncol = 2, rel_widths = c(0.4, 0.6))
plots <- list()
for(i in 1:500){
plots[[i]] <- plot_grid(mheatmap(mod$w[,,i], title = paste0("Iteration ", i), ylab = "1000 genes", xlab = "10 factors", legend.labels = c(0, 0.01), colors = viridis(100, option = "B"), aspect.ratio = 1.5), mheatmap(mod$h[,,i], ylab = "10 factors", xlab = "1000 cells", legend.labels = c(0, 0.01), colors = viridis(100, option = "B")), nrow = 1, ncol = 2, rel_widths = c(0.4, 0.6))
}
plots[[1]]
getwd()
setwd("plots")
getwD()
getwd()
p1 <- plot_grid(mheatmap(mod$w[,,i], title = paste0("Iteration ", i), ylab = "1000 genes", xlab = "10 factors", legend.labels = c(0, 0.01), colors = viridis(100, option = "B"), aspect.ratio = 1.5), mheatmap(mod$h[,,i], ylab = "10 factors", xlab = "1000 cells", legend.labels = c(0, 0.01), colors = viridis(100, option = "B")), nrow = 1, ncol = 2, rel_widths = c(0.4, 0.6))
p1
ggsave(filename=paste0("plot", i, ".png"))
for(i in 1:500){
plot <- plot_grid(mheatmap(mod$w[,,i], title = paste0("Iteration ", i), ylab = "1000 genes", xlab = "10 factors", legend.labels = c(0, 0.01), colors = viridis(100, option = "B"), aspect.ratio = 1.5), mheatmap(mod$h[,,i], ylab = "10 factors", xlab = "1000 cells", legend.labels = c(0, 0.01), colors = viridis(100, option = "B")), nrow = 1, ncol = 2, rel_widths = c(0.4, 0.6))
ggsave(filename = paste0("plot", i, ".png"))
}
source('C:/Users/Owner/Desktop/R packages/amf/R/nmf.R')
source('C:/Users/Owner/Desktop/R packages/amf/R/nmf.R')
source('C:/Users/Owner/Desktop/R packages/amf/R/nmf.R')
str(mod)
models <- list()
for(i in 1:length(mod$it))
models[[i]] <- list("w" = mod$w[,,i], "d" = mod$d[,i], "h" = mod$h[,,i], "tol" = mod$tol[i], "it" = mod$it[i])
str(models)
length(models)
source('C:/Users/Owner/Desktop/R packages/amf/R/nmf.R')
Rcpp::sourceCpp('C:/Users/Owner/Desktop/R packages/amf/src/nnls.cpp')
Rcpp::sourceCpp('C:/Users/Owner/Desktop/R packages/amf/src/nnls.cpp')
Rcpp::sourceCpp('C:/Users/Owner/Desktop/R packages/amf/src/nnls.cpp')
mod <- c_nmf(A, 10)
mod <- c_nmf(A, 10, tol_h = 0)
mod <- c_nmf(A, 10, tol_h = 0, maxit = 10)
mod <- c_nmf(A, 10, tol_h = 0.001, maxit = 10)
mod <- c_nmf(A, 10, tol_h = 0.001, tol_w = 0.001, maxit = 10)
mod <- c_nmf(A, 10, tol_h = 0.001, tol_w = 0.001, loss = 1, maxit = 10)
mod <- c_nmf(A, 10, tol_h = 0.001, tol_w = 0.001, loss = 1, maxit = 10, full_path = T)
str(mod)
mod <- c_nmf(A, 10, tol_h = 0.001, tol_w = 0.001, loss = 1, loss_tol = 0.0001, maxit = 50, full_path = T)
mod <- c_nmf(A, 10, tol_h = 0.001, tol_w = 0.001, loss = 1, tol_loss = 0.0001, maxit = 50, full_path = T)
Rcpp::sourceCpp('C:/Users/Owner/Desktop/R packages/amf/src/nnls.cpp')
mod <- c_nmf(A, 10, tol_h = 0.001, tol_w = 0.001, loss = 1, tol_loss = 0.0001, maxit = 50, full_path = T, trace = 3)
mod <- c_nmf(A, 10, tol_h = 0.001, tol_w = 0.001, loss = 2, tol_loss = 0.0001, maxit = 50, full_path = T, trace = 3)
mod <- c_nmf(A, 10, tol_h = 0, loss = 2, tol_loss = 0.0001, maxit = 50, full_path = T, trace = 3)
mod <- c_nmf(A, 10, tol_h = 0, loss = 0, tol_loss = 0.0001, maxit = 50, full_path = T, trace = 3)
getwd()
setwd(C:/Users/Owner/Desktop/R packages/amf)
setwd("C:/Users/Owner/Desktop/R packages/amf")
getwD()
getwd()
library(devtools)
document()
document()
rm(list = c("c_nmf", "c_nnls"))
document()
?amf
document()
document()
remove.packages("amf")
library(devtools)
document()
?amf
library(amf)
setwd("C:/Users/Owner/Desktop")
library(tlearn)
library(multiway)
library(nnls)
library(bvls)
library(microbenchmark)
library(ggplot2)
library(NNLM)
library(cowplot)
library(viridis)
library(Matrix)
A <- readRDS("tcell_samples.rds")
library(amf)
mod <- amf(A, 10)
document()
getwD()
getwd()
setwd("C:/Users/Owner/Desktop/R packages/amf")
document()
document()
library(amf)
library(amf)
?amf
?`amf-package`
?amf
?nnls
mod <- amf(A, 10)
document()
?nmf
library(amf)
library(fastnmf)
A <- readRDS("C:/Users/Owner/Desktop/tcell_samples.rds")
?c_nmf
mod <- c_nmf(A, 10)
Rcpp::sourceCpp('src/nnls.cpp')
mod <- c_nmf(A, 10)
str(mod)
setClass("amf",
representation(
w = "matrix",
d = "numeric",
h = "matrix",
loss = "numeric",
tol_w = "numeric",
tol_h = "numeric",
tol_loss = "numeric",
it = "numeric",
path = "list"),
prototype(
w = matrix(),
d = numeric(),
h = matrix(),
loss = NA_real_,
tol_w = NA_real_,
tol_h = NA_real_,
tol_loss = NA_real_,
path = list()),
validity= function(object) {
msg <- NULL
if (ncol(object@w) != nrow(object@h))
msg <- c(msg, "ranks of 'w' and 'h' are not equal")
if (ncol(object@w) != length(object@d) || ncol(object@h) != length(object@d))
msg <- c(msg, "ranks of 'd' and 'w' and/or 'h' are not equal")
if(!is.null(path) || length(path) > 0)
if(any(sapply(path, class) != "amf"))
msg <- c(msg, "path does not strictly contain objects of class 'amf'")
if (is.null(msg)) TRUE else msg
}
)
str(new("amf"))
str(mod)
result <- new("amf", w = mod$w, h = mod$h, d = mod$d, it = mod$it)
result <- new("amf", w = mod$w, h = mod$h, d = as.vector(mod$d), it = mod$it)
setClass("amf",
representation(
w = "matrix",
d = "numeric",
h = "matrix",
loss = "numeric",
tol_w = "numeric",
tol_h = "numeric",
tol_loss = "numeric",
it = "numeric",
path = "list"),
prototype(
w = matrix(),
d = numeric(),
h = matrix(),
loss = NA_real_,
tol_w = NA_real_,
tol_h = NA_real_,
tol_loss = NA_real_,
path = list()),
validity= function(object) {
msg <- NULL
if (ncol(object@w) != nrow(object@h))
msg <- c(msg, "ranks of 'w' and 'h' are not equal")
if (ncol(object@w) != length(object@d) || ncol(object@h) != length(object@d))
msg <- c(msg, "ranks of 'd' and 'w' and/or 'h' are not equal")
if (is.null(msg)) TRUE else msg
}
)
result <- new("amf", w = mod$w, h = mod$h, d = as.vector(mod$d), it = mod$it)
new("amf")
result <- new("amf", w = mod$w, h = mod$h, d = as.vector(mod$d), it = mod$it)
result <- new("amf")
result@w <- mod$w
result@h <- mod$h
result@d <- as.vector(mod$d)
result@it <- mod$it
result
str(result)
getwd()
document()
library(devtools)
document()
getwd()
library(devtools)
document()
library(devtools)
document()
A <- readRDS("C:/Users/Owner/Desktop/tcell_samples.rds")
mod <- nmf(A, 10)
?nmf
str(mod)
mheatmap(mod@h)
plot(mod@d)
document()
mod <- nmf(A, 10)
mod <- nmf(A, 10, seed = 123, tol_wh = 0.0001)
?nmf
mb <- microbenchmark(
"switch 0.1" = nmf(A, 10, seed = 123, tol_wh = 0.0001, tol_wh_switch_to_cd = 0.1, diag = F),
"switch 0.08" = nmf(A, 10, seed = 123, tol_wh = 0.0001, tol_wh_switch_to_cd = 0.08, diag = F),
"switch 0.06" = nmf(A, 10, seed = 123, tol_wh = 0.0001, tol_wh_switch_to_cd = 0.06, diag = F),
"switch 0.04" = nmf(A, 10, seed = 123, tol_wh = 0.0001, tol_wh_switch_to_cd = 0.04, diag = F),
"switch 0.02" = nmf(A, 10, seed = 123, tol_wh = 0.0001, tol_wh_switch_to_cd = 0.02, diag = F),
"switch 0.01" = nmf(A, 10, seed = 123, tol_wh = 0.0001, tol_wh_switch_to_cd = 0.01, diag = F),
"switch 0.05" = nmf(A, 10, seed = 123, tol_wh = 0.0001, tol_wh_switch_to_cd = 0.05, diag = F),
"switch 0.01" = nmf(A, 10, seed = 123, tol_wh = 0.0001, tol_wh_switch_to_cd = 0.01, diag = F),
"switch 0.005" = nmf(A, 10, seed = 123, tol_wh = 0.0001, tol_wh_switch_to_cd = 0.001, diag = F),
"switch 0.001" = nmf(A, 10, seed = 123, tol_wh = 0.0001, tol_wh_switch_to_cd = 0.001, diag = F),
"switch 0.0005" = nmf(A, 10, seed = 123, tol_wh = 0.0001, tol_wh_switch_to_cd = 0.0005, diag = F),
"switch 0.0001" = nmf(A, 10, seed = 123, tol_wh = 0.0001, tol_wh_switch_to_cd = 0.0001, diag = F),
"no cd/switch 0.01" = nmf(A, 10, seed = 123, tol_wh = 0.0001, tol_wh_switch_to_cd = 0.01, diag = F cd = c(FALSE, FALSE)),
"no cd/fast only" = nmf(A, 10, seed = 123, tol_wh = 0.0001, tol_wh_switch_to_cd = 0.0001, diag = F cd = c(FALSE, FALSE)),
times = 10
)
mb <- microbenchmark(
"switch 0.1" = nmf(A, 10, seed = 123, tol_wh = 0.0001, tol_wh_switch_to_cd = 0.1, diag = F),
"switch 0.08" = nmf(A, 10, seed = 123, tol_wh = 0.0001, tol_wh_switch_to_cd = 0.08, diag = F),
"switch 0.06" = nmf(A, 10, seed = 123, tol_wh = 0.0001, tol_wh_switch_to_cd = 0.06, diag = F),
"switch 0.04" = nmf(A, 10, seed = 123, tol_wh = 0.0001, tol_wh_switch_to_cd = 0.04, diag = F),
"switch 0.02" = nmf(A, 10, seed = 123, tol_wh = 0.0001, tol_wh_switch_to_cd = 0.02, diag = F),
"switch 0.01" = nmf(A, 10, seed = 123, tol_wh = 0.0001, tol_wh_switch_to_cd = 0.01, diag = F),
"switch 0.05" = nmf(A, 10, seed = 123, tol_wh = 0.0001, tol_wh_switch_to_cd = 0.05, diag = F),
"switch 0.01" = nmf(A, 10, seed = 123, tol_wh = 0.0001, tol_wh_switch_to_cd = 0.01, diag = F),
"switch 0.005" = nmf(A, 10, seed = 123, tol_wh = 0.0001, tol_wh_switch_to_cd = 0.001, diag = F),
"switch 0.001" = nmf(A, 10, seed = 123, tol_wh = 0.0001, tol_wh_switch_to_cd = 0.001, diag = F),
"switch 0.0005" = nmf(A, 10, seed = 123, tol_wh = 0.0001, tol_wh_switch_to_cd = 0.0005, diag = F),
"switch 0.0001" = nmf(A, 10, seed = 123, tol_wh = 0.0001, tol_wh_switch_to_cd = 0.0001, diag = F),
"no cd_switch 0.01" = nmf(A, 10, seed = 123, tol_wh = 0.0001, tol_wh_switch_to_cd = 0.01, diag = F cd = c(FALSE, FALSE)),
"no cd_fast only" = nmf(A, 10, seed = 123, tol_wh = 0.0001, tol_wh_switch_to_cd = 0.0001, diag = F cd = c(FALSE, FALSE)),
times = 10
)
mb <- microbenchmark(
"switch 0.1" = nmf(A, 10, seed = 123, tol_wh = 0.0001, tol_wh_switch_to_cd = 0.1, diag = F),
"switch 0.08" = nmf(A, 10, seed = 123, tol_wh = 0.0001, tol_wh_switch_to_cd = 0.08, diag = F),
"switch 0.06" = nmf(A, 10, seed = 123, tol_wh = 0.0001, tol_wh_switch_to_cd = 0.06, diag = F),
"switch 0.04" = nmf(A, 10, seed = 123, tol_wh = 0.0001, tol_wh_switch_to_cd = 0.04, diag = F),
"switch 0.02" = nmf(A, 10, seed = 123, tol_wh = 0.0001, tol_wh_switch_to_cd = 0.02, diag = F),
"switch 0.01" = nmf(A, 10, seed = 123, tol_wh = 0.0001, tol_wh_switch_to_cd = 0.01, diag = F),
"switch 0.05" = nmf(A, 10, seed = 123, tol_wh = 0.0001, tol_wh_switch_to_cd = 0.05, diag = F),
"switch 0.01" = nmf(A, 10, seed = 123, tol_wh = 0.0001, tol_wh_switch_to_cd = 0.01, diag = F),
"switch 0.005" = nmf(A, 10, seed = 123, tol_wh = 0.0001, tol_wh_switch_to_cd = 0.001, diag = F),
"switch 0.001" = nmf(A, 10, seed = 123, tol_wh = 0.0001, tol_wh_switch_to_cd = 0.001, diag = F),
"switch 0.0005" = nmf(A, 10, seed = 123, tol_wh = 0.0001, tol_wh_switch_to_cd = 0.0005, diag = F),
"switch 0.0001" = nmf(A, 10, seed = 123, tol_wh = 0.0001, tol_wh_switch_to_cd = 0.0001, diag = F),
"no cd_switch 0.01" = nmf(A, 10, seed = 123, tol_wh = 0.0001, tol_wh_switch_to_cd = 0.01, diag = F, cd = c(FALSE, FALSE)),
"no cd_fast only" = nmf(A, 10, seed = 123, tol_wh = 0.0001, tol_wh_switch_to_cd = 0.0001, diag = F, cd = c(FALSE, FALSE)),
times = 10
)
library(microbenchmark)
mb <- microbenchmark(
"switch 0.1" = nmf(A, 10, seed = 123, tol_wh = 0.0001, tol_wh_switch_to_cd = 0.1, diag = F),
"switch 0.08" = nmf(A, 10, seed = 123, tol_wh = 0.0001, tol_wh_switch_to_cd = 0.08, diag = F),
"switch 0.06" = nmf(A, 10, seed = 123, tol_wh = 0.0001, tol_wh_switch_to_cd = 0.06, diag = F),
"switch 0.04" = nmf(A, 10, seed = 123, tol_wh = 0.0001, tol_wh_switch_to_cd = 0.04, diag = F),
"switch 0.02" = nmf(A, 10, seed = 123, tol_wh = 0.0001, tol_wh_switch_to_cd = 0.02, diag = F),
"switch 0.01" = nmf(A, 10, seed = 123, tol_wh = 0.0001, tol_wh_switch_to_cd = 0.01, diag = F),
"switch 0.05" = nmf(A, 10, seed = 123, tol_wh = 0.0001, tol_wh_switch_to_cd = 0.05, diag = F),
"switch 0.01" = nmf(A, 10, seed = 123, tol_wh = 0.0001, tol_wh_switch_to_cd = 0.01, diag = F),
"switch 0.005" = nmf(A, 10, seed = 123, tol_wh = 0.0001, tol_wh_switch_to_cd = 0.001, diag = F),
"switch 0.001" = nmf(A, 10, seed = 123, tol_wh = 0.0001, tol_wh_switch_to_cd = 0.001, diag = F),
"switch 0.0005" = nmf(A, 10, seed = 123, tol_wh = 0.0001, tol_wh_switch_to_cd = 0.0005, diag = F),
"switch 0.0001" = nmf(A, 10, seed = 123, tol_wh = 0.0001, tol_wh_switch_to_cd = 0.0001, diag = F),
"no cd_switch 0.01" = nmf(A, 10, seed = 123, tol_wh = 0.0001, tol_wh_switch_to_cd = 0.01, diag = F, cd = c(FALSE, FALSE)),
"no cd_fast only" = nmf(A, 10, seed = 123, tol_wh = 0.0001, tol_wh_switch_to_cd = 0.0001, diag = F, cd = c(FALSE, FALSE)),
times = 10
)
mb
autoplot(mb)
library(ggplot2)
autoplot(mb)
m <- nmf(A, 10, seed = 123, tol_wh = 0.0001, tol_wh_switch_to_cd = 0.08, diag = F)
mb <- microbenchmark(
"switch 0.1" = nmf(A, 10, seed = 123, tol_wh = 0.0001, tol_wh_switch_to_cd = 0.1, diag = F),
"switch 0.05" = nmf(A, 10, seed = 123, tol_wh = 0.0001, tol_wh_switch_to_cd = 0.05, diag = F),
"switch 0.01" = nmf(A, 10, seed = 123, tol_wh = 0.0001, tol_wh_switch_to_cd = 0.01, diag = F),
"switch 0.005" = nmf(A, 10, seed = 123, tol_wh = 0.0001, tol_wh_switch_to_cd = 0.005, diag = F),
"switch 0.001" = nmf(A, 10, seed = 123, tol_wh = 0.0001, tol_wh_switch_to_cd = 0.001, diag = F),
"switch 0.0005" = nmf(A, 10, seed = 123, tol_wh = 0.0001, tol_wh_switch_to_cd = 0.0005, diag = F),
"switch 0.0001" = nmf(A, 10, seed = 123, tol_wh = 0.0001, tol_wh_switch_to_cd = 0.0001, diag = F),
"no cd_fast only" = nmf(A, 10, seed = 123, tol_wh = 0.0001, tol_wh_switch_to_cd = 0.0001, diag = F, cd = c(FALSE, FALSE)),
"no cd_fast only2" = nmf(A, 10, seed = 123, tol_wh = 0.0001, tol_wh_switch_to_cd = 0.0001, diag = F, cd = c(FALSE, FALSE)),
times = 5
)
mb
autoplot(mb)
mb <- microbenchmark(
"fastcd" = nmf(A, 10, seed = 123, tol_wh = 0.001, tol_wh_switch_to_cd = 0.001, diag = F),
"fast" = nmf(A, 10, seed = 123, tol_wh = 0.001, tol_wh_switch_to_cd = 0.001, diag = F, cd = c(FALSE, FALSE)),
times = 10
)
mb
autoplot(mb)
document()
mb <- microbenchmark(
"fastcd" = nmf(A, 10, seed = 123, tol_wh = 0.01, diag = F),
"fast" = nmf(A, 10, seed = 123, tol_wh = 0.01, diag = F, cd = c(FALSE, FALSE)),
times = 10
)
mb
autoplot(mb)
mb <- microbenchmark(
"fastcd" = nmf(A, 50, seed = 123, tol_wh = 0.001, diag = F),
"fast" = nmf(A, 50, seed = 123, tol_wh = 0.001, diag = F, cd = c(FALSE, FALSE)),
times = 10
)
mb
mb <- microbenchmark(
"fastcd" = nmf(A, 20, seed = 123, tol_wh = 0.0001, diag = F),
"fast" = nmf(A, 20, seed = 123, tol_wh = 0.0001, diag = F, cd = c(FALSE, FALSE)),
times = 5
)
mb
autoplot(mb)
m <- nmf(A, k, min = 0)
m <- nmf(A, 10, min = 0)
document()
m <- nmf(A, 10, min = 0)
hist(m@h)
hist(m@w)
mheatmap(m@h)
hist(m@h)
m <- nmf(A, 10, min = 0, max = 0.001)
mheatmap(m@h)
hist(m@h)
hist(m@w)
hist(m@h)
m <- nmf(A, 10, min = 0, max = 0.001, diag = F)
hist(m@h)
hist(m@w)
m <- nmf(A, 10, min = 0, max = c(0.001, 0.001), diag = F)
m <- nmf(A, 10, min = 0, max = c(0.001, 0.001), diag = T)
m <- nmf(A, 10, min = 0, max = c(0, 0.001), diag = T)
hist(m@h)
mheatmap(m@h)
m <- nmf(A, 10, min = 0, max = c(0, 1), diag = F)
hist(m@h)
mheatmap(m@h)
m <- nmf(A, 10, min = 0, max = c(0, 0.01), diag = T)
mheatmap(m@h)
hist(m@h)
m <- nmf(A, 10, min = 0, max = c(0, 0.002), diag = T)
mheatmap(m@h)
hist(m@h)
m <- nmf(A, 10, min = 0, max = c(0, 0.001), diag = T)
mheatmap(m@h)
hist(m@h)
m <- nmf(A, 10, min = 0, max = 0.001, diag = T)
hist(m@h)
m <- nmf(A, 10, min = 0, PE = 0.05, diag = T)
m <- nmf(A, 10, PE = 0, diag = T)
m <- nmf(A, 10, PE = 0.01, diag = T)
m <- nmf(A, 10, PE = 0.01, diag = T, loss = "mse")
m <- nmf(A, 10, PE = c(0, 0.01), diag = T, loss = "mse")
mheatmap(m@h)
m <- nmf(A, 10, PE = c(0, 0.05))
m <- nmf(A, 10, L2 = 0.3, PE = c(0, 0.05))
m <- nmf(A, 10, L2 = 0.3)
m <- nmf(A, 10, L2 = 0.3, cd = FALSE)
m <- nmf(A, 10, L2 = 0.1, cd = FALSE)
m <- nmf(A, 10, L1 = 0.1, cd = FALSE)
m <- nmf(A, 10, L1 = 0.1, cd = FALSE, diag = F)
document()
Rcpp::sourceCpp('src/nnls.cpp')
Rcpp::sourceCpp('src/nnls.cpp')
Rcpp::sourceCpp('src/nnls.cpp')
Rcpp::sourceCpp('src/nnls.cpp')
Rcpp::sourceCpp('src/nnls.cpp')
str(mod)
l <- c_loss(mod@w, mod@d, mod@h, A, 0, 0, 0, 0, 0, 0, FALSE, TRUE, 0L)
str(l)
loss <- mean((A - mod@w %*% mod@h)^2)
loss <- mean((A - mod@w %*% mod@d %*% mod@h)^2)
loss <- mean((A - mod@w %*% Diagonal(x = mod@d) %*% mod@h)^2)
library(Matrix)
loss <- mean((A - mod@w %*% Diagonal(x = mod@d) %*% mod@h)^2)
loss
mod <- nmf(A, 10)
mod <- nmf(A, 10)
?nmf
document()
